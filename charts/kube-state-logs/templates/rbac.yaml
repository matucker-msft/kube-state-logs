apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-logs
  labels:
    app.kubernetes.io/name: kube-state-logs
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-logs
  labels:
    app.kubernetes.io/name: kube-state-logs
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
{{- $resources := .Values.config.resources | toStrings }}
{{- if has "deployments" $resources }}
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "replicasets" $resources }}
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "statefulsets" $resources }}
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "daemonsets" $resources }}
  - apiGroups: ["apps"]
    resources: ["daemonsets"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "pods" $resources) (has "all" $resources) }}
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "services" $resources) (has "all" $resources) }}
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "endpoints" $resources) (has "all" $resources) }}
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "nodes" $resources) (has "all" $resources) }}
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "namespaces" $resources }}
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "jobs" $resources }}
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "cronjobs" $resources }}
  - apiGroups: ["batch"]
    resources: ["cronjobs"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "configmaps" $resources }}
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "secrets" $resources }}
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "persistentvolumeclaims" $resources) (has "all" $resources) }}
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "persistentvolumes" $resources) (has "all" $resources) }}
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "resourcequotas" $resources) (has "all" $resources) }}
  - apiGroups: [""]
    resources: ["resourcequotas"]
    verbs: ["list", "watch"]
{{- end }}
{{- if or (has "poddisruptionbudgets" $resources) (has "all" $resources) }}
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "ingresses" $resources }}
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "horizontalpodautoscalers" $resources }}
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "serviceaccounts" $resources }}
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "storageclass" $resources }}
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "networkpolicy" $resources }}
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "replicationcontroller" $resources }}
  - apiGroups: [""]
    resources: ["replicationcontrollers"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "limitrange" $resources }}
  - apiGroups: [""]
    resources: ["limitranges"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "lease" $resources }}
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "role" $resources }}
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "clusterrole" $resources }}
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "rolebinding" $resources }}
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "clusterrolebinding" $resources }}
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterrolebindings"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "volumeattachment" $resources }}
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["list", "watch"]
{{- end }}
{{- if has "certificatesigningrequest" $resources }}
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["list", "watch"]
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-logs
  labels:
    app.kubernetes.io/name: kube-state-logs
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-logs
subjects:
  - kind: ServiceAccount
    name: kube-state-logs
    namespace: {{ .Release.Namespace }} 